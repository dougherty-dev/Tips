<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="PHP_CodeSniffer" xsi:noNamespaceSchemaLocation="phpcs.xsd">
	<description>PHP 1TBS K&amp;R., https://github.com/php/php-src/blob/master/CODING_STANDARDS.md</description>
	<file>autoload.php</file>
	<file>bin</file>
	<file>scripts</file>
	<file>src</file>
	<file>tests</file>
	<exclude-pattern>*/src/Standards/*/Tests/*\.(inc|css|js)$</exclude-pattern>
	<exclude-pattern>*/tests/Core/*/*\.(inc|css|js)$</exclude-pattern>
	<exclude-pattern>*/tests/Core/*/Fixtures/*\.php$</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*.(js|css)</exclude-pattern>
	<arg name="basepath" value="."/>
	<arg name="colors"/>
	<arg name="parallel" value="75"/>
	<arg value="np"/>
	<!-- Don't hide tokenizer exceptions -->
	<rule ref="Internal.Tokenizer.Exception">
		<type>error</type>
	</rule>
	<!-- Include the PSR12 standard -->
	<rule ref="PSR12">
		<exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>
		<exclude name="PSR1.Methods.CamelCapsMethodName"/>
		<exclude name="PSR2.Classes.ClassDeclaration.OpenBraceNewLine"/>
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<exclude name="Generic.Formatting.MultipleStatementAlignment.NotSame"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.ValueNoNewline"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed"/>
		<exclude name="Squiz.Classes.ValidClassName.NotCamelCaps"/>
		<exclude name="Squiz.Commenting.ClosingDeclarationComment.Missing"/>
		<exclude name="Squiz.Commenting.VariableComment.Missing"/>
		<exclude name="Squiz.Formatting.OperatorBracket.MissingBrackets"/>
		<exclude name="Squiz.WhiteSpace.MemberVarSpacing.FirstIncorrect"/>
		<exclude name="Squiz.WhiteSpace.FunctionSpacing.AfterLast"/>
		<exclude name="Squiz.WhiteSpace.FunctionSpacing.Before"/>
		<exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose"/>
	</rule>
	<!-- Tabs, not spaces -->
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
		</properties>
	</rule>
	<!-- Check var names, but we don't want leading underscores for private vars -->
	<rule ref="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore">
		<severity>0</severity>
	</rule>
	<!-- Ban some functions -->
	<rule ref="Generic.PHP.ForbiddenFunctions">
		<properties>
			<property name="forbiddenFunctions" type="array">
				<element key="sizeof" value="count"/>
				<element key="delete" value="unset"/>
				<element key="print" value="echo"/>
				<element key="is_null" value="null"/>
				<element key="create_function" value="null"/>
			</property>
		</properties>
	</rule>
	<!-- Private methods MUST not be prefixed with an underscore -->
	<rule ref="PSR2.Methods.MethodDeclaration.Underscore">
		<type>error</type>
	</rule>
	<!-- Private properties MUST not be prefixed with an underscore -->
	<rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
		<type>error</type>
	</rule>
	<!-- The testing bootstrap file uses string concats to stop IDEs seeing the class aliases -->
	<rule ref="Generic.Strings.UnnecessaryStringConcat">
		<exclude-pattern>tests/bootstrap\.php</exclude-pattern>
	</rule>
	<!-- This test file specifically *needs* Windows line endings for testing purposes. -->
	<rule ref="Generic.Files.LineEndings.InvalidEOLChar">
		<exclude-pattern>tests/Core/Tokenizer/StableCommentWhitespaceWinTest\.php</exclude-pattern>
	</rule>
</ruleset>
